# Ã‰tape : Build avec tests unitaires
FROM node:18-alpine AS build

# 1. Dossier de travail
WORKDIR /app

# 2. Copier package.json + yarn.lock et installer toutes les dÃ©pendances (prod + dev)
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# 3. Copier le code source
COPY . .

# 4. Environnement pour les tests
ENV NODE_ENV=development
ENV LOG_LEVEL=debug

# 5. Argument de contrÃ´le du scope de test
ARG TEST_SCOPE=all

# 6. DÃ©finir CI pour forcer lâ€™affichage de jest dans Docker
ENV CI=true
# ExÃ©cution conditionnelle des tests
ARG TEST_RUN_TAG=none  # ðŸ‘ˆ ceci sert Ã  invalider le cache

# 7. Lister les tests qui seront lancÃ©s (utile pour debug CI)
RUN yarn test:unit:build --listTests --verbose  --runInBand --silent=false --colors --detectOpenHandles

# 8. Lancer les tests selon le scope
RUN echo "ðŸ§ª Test run tag: $TEST_RUN_TAG" && \
    if [ "$TEST_SCOPE" = "fail" ]; then \
      echo "ðŸ’¥ Test volontairement KO" && \
      yarn test:unit:fail --verbose  --runInBand --silent=false --colors --detectOpenHandles; \
    else \
      echo "âœ… Lancer tous les tests unitaires (OK seulement)" && \
      yarn test:unit:build --verbose  --runInBand --silent=false --colors --detectOpenHandles; \
    fi
