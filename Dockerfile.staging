# -------------------------------------------
# Stage: preprod (tests fonctionnels + E2E)
# -------------------------------------------
FROM node:18-alpine AS staging

WORKDIR /app

# Copier tout le code et les tests
COPY . .

# Installer les d√©pendances
RUN yarn install --frozen-lockfile

# Injecter le fichier d'environnement staging
COPY .env.staging .env

# Argument (inject√© depuis CLI/CI)
ARG TEST_RUN_TAG=not-set
ENV TEST_RUN_TAG=${TEST_RUN_TAG}

ARG TEST_SCOPE=all

# Variables d‚Äôenvironnement pour Jest
ENV NODE_ENV=staging
ENV LOG_LEVEL=debug
ENV CI=true

# Ex√©cuter les tests fonctionnels (MySQL)
RUN echo "üß™ Lancement tests staging - TAG: $TEST_RUN_TAG" && \
    if [ "$TEST_SCOPE" = "functional" ] ; then \
        echo "üì¶ Lancement des tests fonctionnels..." ; \
        yarn test:functional:staging --verbose --silent=false --colors --detectOpenHandles ; \
    elif [ "$TEST_SCOPE" = "e2e" ] ; then \
        echo "üß™ [TODO] Tests E2E pas encore impl√©ment√©s (placeholder)" ; \
        echo "‚úÖ Simulation r√©ussite E2E (future impl√©mentation)" ; \
    else \
        echo "‚úÖ Lancement de tous les tests : fonctionnels et E2E" ; \
        yarn test:functional:staging --verbose --silent=false --colors --detectOpenHandles ; && \
        echo "üß™ [TODO] Tests E2E pas encore impl√©ment√©s (placeholder)" ; \
        echo "‚úÖ Simulation r√©ussite E2E (future impl√©mentation)" ; \
    fi
# ‚ö†Ô∏è Placeholder pour E2E tests (√† venir)
# RUN yarn test:e2e:staging || echo "Pas encore de E2E test"
