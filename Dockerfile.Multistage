# Cette app n’a pas besoin de build React ou transpilation, le principal intérêt ici est de :
#    séparer les dépendances (yarn install) du runtime final,
#    produire une image plus légère et plus sécurisée, sans les fichiers inutiles (doc, cache...).

# Étape 1 : build
FROM node:lts-alpine as builder

WORKDIR /app

# Installer les dépendances
COPY package.json yarn.lock ./
RUN yarn install --production

# Copier le reste du code
COPY . .

# Étape 2 : exécution
FROM node:lts-alpine

WORKDIR /app

COPY --from=builder /app/src ./src
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json .
COPY --from=builder /app/styles.css .
COPY .env.docker .env

# Installer curl pour le healthcheck
RUN apk add --no-cache curl

# Exposer le port d'écoute de l'application
EXPOSE 3000

# Healthcheck sur endpoint /version
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD curl --fail http://localhost:3000/version || exit 1

CMD ["node", "src/index.js"]
